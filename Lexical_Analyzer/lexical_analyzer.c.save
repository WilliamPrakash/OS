#include <stdlib.h>
#include <stdio.h>
#include <stdbool.h>
#include <string.h>
#include <unistd.h>

int main(int argc, char *argv[]) {
	// this prevents stack smashing, can also just declare a char with a set size: ???
	char *buffer;
	size_t bufsize = 32;
	buffer = (char *)malloc(bufsize * sizeof(char));
	printf("type a line to tokenize: ");
	getline(&buffer, &bufsize, stdin);
	buffer[strcspn(buffer, "\n")];	// gets rid of newline character

	// Tokenize buffer by char to read it as a char array (string)
	const char s[2] = " ";	// tokenize buffer based on a blank space
	char *token;	// this probably isn't memory safe, stack overflow vulnerability
	token = strtok(buffer, s);
	char *arr[20];
	arr[i] = token;

	for(i = 0; i < 20; i++){

	}








	// get and store user input in char array
	/*char str[100];
	printf("Enter a value :");
	scanf("%s", str);
	getchar();
	printf("\nYou entered: %s\n", str);*/

	return 0;
}
